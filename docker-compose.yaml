services:
  traefik:
    image: traefik:v3.5.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  drop4crop-api:
    build:
      context: ../drop4crop-api
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=drop4crop-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
      # Local development Keycloak settings (override .env)
      - KEYCLOAK_CLIENT_ID=drop4crop-ui
      - KEYCLOAK_API_ID=drop4crop-api
      - KEYCLOAK_API_SECRET=mock-secret
      - KEYCLOAK_REALM=drop4crop
      - KEYCLOAK_URL=http://drop4crop-keycloak
      - S3_BUCKET_ID=${S3_BUCKET_ID}
      - S3_URL=${S3_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_PREFIX=${S3_PREFIX}
      - TILE_CACHE_URI=redis://:${REDIS_PASSWORD}@tile-cache:6379/0
      - DEPLOYMENT=dev
      - APP_NAME=drop4crop
    ports:
      - 3005:3000
    depends_on:
      - drop4crop-db
      - drop4crop-keycloak
    volumes:
      - ../drop4crop-api/src:/app/src
      - ../drop4crop-api/migration:/app/migration  # Mount migration directory
      - drop4crop-api-rust-data:/app/target  # Store builds in docker volume
      - ../drop4crop-api/Cargo.toml:/app/Cargo.toml
      - ../drop4crop-api/Cargo.lock:/app/Cargo.lock
      - ../drop4crop-api/bacon.toml:/app/bacon.toml  # Mount bacon config
    labels:
      - "traefik.http.routers.drop4crop-bff.rule=Host(`drop4crop`) && PathPrefix(`/api`)"
      - "traefik.http.routers.drop4crop-bff.entrypoints=websecure"
      - "traefik.http.routers.drop4crop-bff.tls=true"
      - "traefik.http.services.drop4crop-bff.loadbalancer.server.port=3000"

  drop4crop-db:
    image: postgis/postgis:16-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5443:5432
    volumes:
      - drop4crop-db-data:/var/lib/postgresql/data
      - ./rasters:/rasters

  drop4crop-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - VITE_KEYCLOAK_CLIENT_ID=drop4crop-ui
      - VITE_KEYCLOAK_REALM=drop4crop
      - VITE_KEYCLOAK_URL=https://drop4crop-keycloak/
      - VITE_KEYCLOAK_BROWSER_URL=https://drop4crop-keycloak/
    ports:
      - "5173:5173"  # Temporarily expose port for testing
    labels:
      - "traefik.http.routers.drop4crop-ui.rule=Host(`drop4crop`)"
      - "traefik.http.routers.drop4crop-ui.entrypoints=websecure"
      - "traefik.http.routers.drop4crop-ui.tls=true"
      - "traefik.http.services.drop4crop-ui.loadbalancer.server.port=5173"
    volumes:
      - .:/app

  tile-cache:
    image: redis:7.4.0
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379

  drop4crop-keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    command: start-dev --import-realm
    environment:
      KC_DB: dev-file
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8888
      KC_HOSTNAME: drop4crop-keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8888:8888"
    volumes:
      - ./keycloak-realm-dev.json:/opt/keycloak/data/import/realm.json:ro
    labels:
      - "traefik.http.routers.drop4crop-keycloak.rule=Host(`drop4crop-keycloak`)"
      - "traefik.http.routers.drop4crop-keycloak.entrypoints=websecure"
      - "traefik.http.routers.drop4crop-keycloak.tls=true"
      - "traefik.http.services.drop4crop-keycloak.loadbalancer.server.port=8888"

volumes:
  drop4crop-db-data:
  drop4crop-api-rust-data:
