version: '3.8'

services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  drop4crop-api:
    build:
      context: ../drop4crop-api
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=drop4crop-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - S3_BUCKET_ID=${S3_BUCKET_ID}
      - S3_URL=${S3_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_PREFIX=${S3_PREFIX}
      - TILE_CACHE_URL=tile-cache
      - TILE_CACHE_PORT=6379
      - DEPLOYMENT=dev
      - APP_NAME=drop4crop
    ports:
      - 3005:3000
    depends_on:
      - drop4crop-db
    volumes:
      - ../drop4crop-api/src:/app/src
      - ../drop4crop-api/migration:/app/migration  # Mount migration directory
      - drop4crop-api-rust-data:/app/target  # Store builds in docker volume
      - ../drop4crop-api/Cargo.toml:/app/Cargo.toml
      - ../drop4crop-api/Cargo.lock:/app/Cargo.lock
      - ../drop4crop-api/bacon.toml:/app/bacon.toml  # Mount bacon config
    labels:
      - "traefik.http.routers.drop4crop-bff.rule=Host(`drop4crop`) && PathPrefix(`/api`)"
      - "traefik.http.services.drop4crop-bff.loadbalancer.server.port=3000"

  drop4crop-db:
    image: postgis/postgis:16-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5443:5432
    volumes:
      - drop4crop-db-data:/var/lib/postgresql/data
      - ./rasters:/rasters

  drop4crop-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev
    labels:
      - "traefik.http.routers.drop4crop-ui.rule=Host(`drop4crop`)"
      - "traefik.http.services.drop4crop-ui.loadbalancer.server.port=5173"
    volumes:
      - .:/app

  tile-cache:
    image: redis:7.4.0
    ports:
      - 6379:6379


  # drop4crop-api-rust:
  #   build:
  #     context: ../drop4crop-api-rust
  #     dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
  #   environment:
  #     - S3_BUCKET_ID=${S3_BUCKET_ID}
  #     # - S3_URL=${S3_URL}
  #     - S3_ACCESS_KEY=${S3_ACCESS_KEY}
  #     - S3_SECRET_KEY=${S3_SECRET_KEY}
  #     - DB_HOST=drop4crop-db
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=psql
  #     - DB_NAME=postgres
  #     - DB_PREFIX=postgresql
  #     # - S3_PREFIX=${S3_PREFIX}
  #     # - DB_HOST=sensormap-db
  #     # - DB_PORT=5432
  #     # - DB_USER=postgres
  #     # - DB_PASSWORD=psql
  #     # - DB_NAME=postgres
  #     # - DB_PREFIX=postgresql
  #     # - KEYCLOAK_UI_ID=${KEYCLOAK_CLIENT_ID}
  #     # - KEYCLOAK_BFF_ID=${KEYCLOAK_BFF_ID}
  #     # - KEYCLOAK_BFF_SECRET=${KEYCLOAK_BFF_SECRET}
  #     # - KEYCLOAK_REALM=${KEYCLOAK_REALM}
  #     # - KEYCLOAK_URL=${KEYCLOAK_URL}
  #     - DEPLOYMENT=dev
  #     - APP_NAME=drop4crop
  #     - REDIS_URL=tile-cache
  #     - REDIS_PORT=6379
  #   ports:
  #     - 3005:3000
  #   volumes:
  #     - ../drop4crop-api-rust/src:/app/src
  #     - drop4crop-api-rust-data:/app/target  # Store builds in docker volume
  #     - ../drop4crop-api-rust/Cargo.toml:/app/Cargo.toml
  #     - ../drop4crop-api-rust/Cargo.lock:/app/Cargo.lock
  #   labels:
  #     - "traefik.http.routers.drop4crop-api-rust.rule=Host(`drop4crop`) && PathPrefix(`/tiles`)"
  #     - "traefik.http.services.drop4crop-api-rust.loadbalancer.server.port=3000"

volumes:
  drop4crop-db-data:
  drop4crop-api-rust-data: